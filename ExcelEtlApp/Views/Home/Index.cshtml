@model List<ExcelEtlApp.Controllers.HomeController.MonthlyDto>
@{
    ViewData["Title"] = "Ticket Size by Lokasi";
    var lokasiList = ViewBag.LokasiList as List<ExcelEtlApp.Models.Lokasi> ?? new List<ExcelEtlApp.Models.Lokasi>();
    var selected = ViewBag.SelectedLokasi as string;
}

<h2>Ticket Size (Filter Lokasi)</h2>

<form method="get" class="mb-3 d-flex align-items-center">
    <label class="me-2">Pilih Lokasi:</label>
    <select name="lokasiId" class="form-select w-auto me-2" onchange="this.form.submit()">
        <option value="">-- Pilih Lokasi --</option>
        @foreach(var m in lokasiList)
        {            
            <option value="@m.Nama" selected="@(m.Nama == selected ? "selected" : null)">@m.Nama</option>
        }
    </select>

    @if(!string.IsNullOrEmpty(selected))
    {
        <form method="post" asp-action="Export" asp-controller="Home" style="display:inline-block;">
            <input type="hidden" name="lokasiId" value="@selected" />
           
        </form>
    }
</form>
<h3>Chart per Lokasi (@(selected ?? "Lokasi belum dipilih"))</h3>
<canvas id="ticketChart" height="120"></canvas>

<br />
<table class="table table-striped table-bordered mb-4">
    <thead>
        <tr>
           
            <th>Bulan</th>
            <th>TRX</th>
            <th>NPP</th>
            <th>Ticket Size</th>
        </tr>
    </thead>
    <tbody>
    @foreach(var it in Model)
    {
        <tr>
           
                <td>@it.Bulan.ToString("yyyy-MM")</td>
                <td style="text-align:right">@it.Trx.ToString("N0")</td>
                <td style="text-align:right">@it.Npp.ToString("N0")</td>
                <td style="text-align:right">@it.TicketSize.ToString("N4")</td>
        </tr>
    }
    </tbody>
</table>


@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        const labels = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.Select(m => m.Bulan.ToString("yyyy-MM"))));
        const trxData = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.Select(m => m.Trx)));
        const nppData = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.Select(m => m.Npp)));
        const ticketData = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.Select(m => m.TicketSize)));

        const ctx = document.getElementById('ticketChart').getContext('2d');
        new Chart(ctx, {
            data: {
                labels: labels,
                datasets: [
                    {
                        type: 'bar',
                        label: 'TRX',
                        data: trxData,
                        backgroundColor: 'rgba(54, 162, 235, 0.6)',
                        yAxisID: 'y1'
                    },
                    {
                        type: 'bar',
                        label: 'NPP',
                        data: nppData,
                        backgroundColor: 'rgba(255, 159, 64, 0.6)',
                        yAxisID: 'y1'
                    },
                    {
                        type: 'line',
                        label: 'Ticket Size',
                        data: ticketData,
                        borderColor: 'rgba(255, 99, 132, 1)',
                        backgroundColor: 'rgba(255, 99, 132, 0.2)',
                        yAxisID: 'y'
                    }
                ]
            },
            options: {
                responsive: true,
                interaction: { mode: 'index', intersect: false },
                scales: {
                    y: {
                        type: 'linear',
                        position: 'left',
                        title: { display: true, text: 'Ticket Size' }
                    },
                    y1: {
                        type: 'linear',
                        position: 'right',
                        title: { display: true, text: 'TRX / NPP' },
                        grid: { drawOnChartArea: false }
                    }
                }
            }
        });
    </script>
}
